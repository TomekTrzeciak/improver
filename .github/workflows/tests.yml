name: Tests

on: [push, pull_request]

jobs:

  singularity:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Container image cache
      id: sif-cache
      uses: actions/cache@v1
      with:
        path: impr.sif
        key: ${{ runner.os }}-${{ hashFiles('singularity.def') }}-${{ hashfiles('environment.yml') }}
    - name: Package installation
      if: steps.sif-cache.outputs.cache-hit != 'true'
      run: sudo apt-get install singularity-container
    - name: Container build
      if: steps.sif-cache.outputs.cache-hit != 'true'
      run: sudo singularity build impr.sif singularity.def
    - name: Container check
      if: steps.sif-cache.outputs.cache-hit != 'true'
      run: singularity exec impr.sif python -c 'import iris; print(iris.__version__)'

  test:
    name: ${{ matrix.step.name }}
    runs-on: ubuntu-latest
    needs: singularity
    strategy:
      matrix:
        step:
        - name: pytest
          cmd: pytest
        - name: pycodestyle
          cmd: pycodestyle improver improver_tests
        - name: pylint
          cmd: pylint -j 0 -E --rcfile=etc/pylintrc improver improver_tests
        - name: sphinx
          cmd: make -C doc html
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Container image cache
      uses: actions/cache@v1
      with:
        path: impr.sif
        key: ${{ runner.os }}-${{ hashFiles('singularity.def') }}-${{ hashfiles('environment.yml') }}
    - name: Package installation
      run: sudo apt-get install singularity-container
    - name: Run ${{ matrix.step.name }}
      run: singularity exec impr.sif ${{ matrix.step.cmd }}
